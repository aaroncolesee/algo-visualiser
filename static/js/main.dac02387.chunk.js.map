{"version":3,"sources":["Algorithms.js","SortingVisualiser/SortingVisualiser.js","App.js","serviceWorker.js","index.js"],"names":["getMergesortAnimations","array","length","animations","auxiliaryArray","slice","mergesort","startIdx","endIdx","middleIdx","Math","floor","counter","lcounter","rcounter","push","merge","getQuicksortAnimations","quicksort","lowIdx","highIdx","j","pivotIdx","i","temp","partition","getBubbleSortAnimations","limitIdx","console","log","bubbleSort","SortingVisualiser","props","onSliderChange","event","setState","numBars","target","value","resetArray","state","width","window","innerWidth","height","innerHeight","maxNum","updateWindowSize","bind","this","addEventListener","removeEventListener","min","max","random","disableButtons","algorithms","bars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","enableButtons","insertionSort","arr","countingSort","getElementById","disabled","className","classNamee","id","onClick","type","onChange","map","idx","key","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dac02387.chunk.js","sourcesContent":["export function getMergesortAnimations(array) {\r\n    if (array.length <= 1) return array;\r\n\r\n    const animations = [];\r\n    const auxiliaryArray = array.slice();\r\n    mergesort(array, 0, array.length-1, auxiliaryArray, animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergesort(array, startIdx, endIdx, auxiliaryArray, animations) {\r\n    if (startIdx === endIdx) return;\r\n\r\n    const middleIdx = Math.floor((startIdx+endIdx)/2);\r\n    mergesort(auxiliaryArray, startIdx, middleIdx, array, animations);\r\n    mergesort(auxiliaryArray, middleIdx+1, endIdx, array, animations);\r\n\r\n    merge(array, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction merge(array, startIdx, middleIdx, endIdx, auxiliaryArray, animations) {\r\n    let counter = startIdx;\r\n    let lcounter = startIdx;\r\n    let rcounter = middleIdx+1;\r\n\r\n    while (lcounter <= middleIdx && rcounter <= endIdx) {\r\n        animations.push([lcounter, rcounter]);\r\n        animations.push([lcounter, rcounter]);\r\n        if (auxiliaryArray[lcounter] <= auxiliaryArray[rcounter]) {\r\n            animations.push([counter, auxiliaryArray[lcounter]]);\r\n            array[counter] = auxiliaryArray[lcounter];\r\n            counter++;\r\n            lcounter++;\r\n        }\r\n        else {\r\n            animations.push([counter, auxiliaryArray[rcounter]]);\r\n            array[counter] = auxiliaryArray[rcounter];\r\n            counter++;\r\n            rcounter++;\r\n        }\r\n    }\r\n\r\n    while (lcounter <= middleIdx) {\r\n        animations.push([lcounter, lcounter]);\r\n        animations.push([lcounter, lcounter]);\r\n        animations.push([counter, auxiliaryArray[lcounter]]);\r\n        array[counter] = auxiliaryArray[lcounter];\r\n        counter++;\r\n        lcounter++;\r\n    }\r\n\r\n    while (rcounter <= endIdx) {\r\n        animations.push([rcounter, rcounter]);\r\n        animations.push([rcounter, rcounter]);\r\n        animations.push([counter, auxiliaryArray[rcounter]]);\r\n        array[counter] = auxiliaryArray[rcounter];\r\n        counter++;\r\n        rcounter++;\r\n    }\r\n}\r\n\r\nexport function getQuicksortAnimations(array) {\r\n    if (array.length <= 1) return array;\r\n    \r\n    const animations = [];\r\n    quicksort(array, 0, array.length-1, animations);\r\n    return animations;\r\n}\r\n\r\nfunction quicksort(array, lowIdx, highIdx, animations) {\r\n    if (lowIdx < highIdx) {\r\n        const j = partition(array, lowIdx, highIdx, animations);\r\n        \r\n        quicksort(array, lowIdx, j, animations);\r\n        quicksort(array, j+1, highIdx, animations);\r\n    }\r\n}\r\n\r\nfunction partition(array, lowIdx, highIdx, animations) {\r\n    const pivotIdx = lowIdx;\r\n\r\n    let i = lowIdx;\r\n    let j = highIdx;\r\n\r\n    while (i < j) {\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        do {\r\n            animations.push([i, i]);\r\n            animations.push([i, i]);\r\n            animations.push([i, array[i]]);\r\n            i++;\r\n        } while (array[i] < array[pivotIdx]);\r\n        do {\r\n            animations.push([j, j]);\r\n            animations.push([j, j]);\r\n            animations.push([j, array[j]]);\r\n            j--;\r\n        } while (array[j] > array[pivotIdx]);\r\n        if (i < j) {\r\n            animations.push([i, j]);\r\n            animations.push([i, j]);\r\n            animations.push([i, array[j]]);\r\n            const temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n\r\n    }\r\n    animations.push([j, pivotIdx]);\r\n    animations.push([j, pivotIdx]);\r\n    animations.push([j, array[pivotIdx]]);\r\n    const temp =  array[pivotIdx];\r\n    array[pivotIdx] = array[j];\r\n    array[j] = temp;\r\n\r\n    return j;\r\n}\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n    const animations = [];\r\n    bubbleSort(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSort(array, animations) {\r\n    let limitIdx = array.length-1;\r\n    for (let i=0; i<array.length; i++) {\r\n        for (let j=0; j<limitIdx; j++) {\r\n            animations.push([j, j]);\r\n            animations.push([j, j]);\r\n            animations.push([j, array[j]]);\r\n            if (array[j] > array[j+1]) {\r\n                animations.push([j, j+1]);\r\n                animations.push([j, j+1]);\r\n                animations.push([j, array[j+1]]);\r\n                animations.push([j+1, j]);\r\n                animations.push([j+1, j]);\r\n                animations.push([j+1, array[j]]);\r\n                const temp = array[j];\r\n                array[j] = array[j+1];\r\n                array[j+1] = temp;\r\n            }\r\n        }\r\n        limitIdx--;\r\n    }\r\n    console.log(array);\r\n}\r\n\r\nexport function getInsetionSortAnimations(array) {\r\n    if (array.length <= 1) return array;\r\n    \r\n    const animations = [];\r\n    insertionSort(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction insertionSort(array, animations) {\r\n    for (let i=1; i<array.length; i++) {\r\n        let j = i;\r\n        while (j > 0 && array[j-1] > array[j]) {\r\n            animations.push([j-1, j]);\r\n            animations.push([j-1, j]);\r\n            animations.push([j-1, array[j]]);\r\n            animations.push([j, j-1]);\r\n            animations.push([j, j-1]);\r\n            animations.push([j, array[j-1]]);\r\n            const temp = array[j];\r\n            array[j] = array[j-1];\r\n            array[j-1] = temp;\r\n            j--;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getCountingSortAnimations(array, maxNum) {\r\n    const animations = [];\r\n    countingSort(array, maxNum, animations);\r\n    return animations;\r\n}\r\n\r\nfunction countingSort(array, maxNum, animations) {\r\n    let arr = []\r\n\r\n    for (let i=0; i<=maxNum; i++) {\r\n        arr[i] = 0;\r\n    }\r\n    for (let i=0; i<array.length; i++) {\r\n        animations.push([i, i]);\r\n        animations.push([i, i]);\r\n        animations.push([i, array[i]]);\r\n        arr[array[i]]++;\r\n    }\r\n    let j = 0;\r\n    for (let i=0; i<=arr.length; i++) {\r\n        while (arr[i] > 0) {\r\n            animations.push([j, j]);\r\n            animations.push([j, j]);\r\n            animations.push([j, i]);\r\n            array[j] = i;\r\n            j++;\r\n            arr[i]--;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as algorithms from '../Algorithms.js';\r\n\r\nconst ANIMATION_SPEED_MS = 5;\r\nconst PRIMARY_COLOR = 'turquoise';\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nclass SortingVisualiser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            array : [],\r\n            numBars: 50,\r\n            maxNum: 100000000\r\n        };\r\n\r\n        this.updateWindowSize = this.updateWindowSize.bind(this);\r\n    }\r\n\r\n    updateWindowSize() {\r\n        this.setState({width: window.innerWidth, height: window.innerHeight});\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n        window.addEventListener('resize', this.updateWindowSize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowSize);\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < this.state.numBars; i++) {\r\n            array.push(randomIntFromInterval(5, this.state.maxNum));\r\n        }\r\n        this.setState({array});\r\n    }\r\n\r\n    mergesort() {\r\n        this.disableButtons();\r\n\r\n        const animations = algorithms.getMergesortAnimations(this.state.array);\r\n        for (let i=0; i<animations.length; i++) {\r\n            const bars = document.getElementsByClassName('bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = bars[barOneIdx].style;\r\n                const barTwoStyle = bars[barTwoIdx].style;\r\n                const color = i%3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight*850/this.state.maxNum}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.enableButtons();\r\n        }, animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n\r\n    quicksort() {\r\n        this.disableButtons();\r\n\r\n        const animations = algorithms.getQuicksortAnimations(this.state.array);\r\n        for (let i=0; i<animations.length; i++) {\r\n            const bars = document.getElementsByClassName('bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = bars[barOneIdx].style;\r\n                const barTwoStyle = bars[barTwoIdx].style;\r\n                const color = i%3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight*850/this.state.maxNum}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.enableButtons();\r\n        }, animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n\r\n    bubbleSort() {\r\n        this.disableButtons();\r\n\r\n        const animations = algorithms.getBubbleSortAnimations(this.state.array);\r\n        for (let i=0; i<animations.length; i++) {\r\n            const bars = document.getElementsByClassName('bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = bars[barOneIdx].style;\r\n                const barTwoStyle = bars[barTwoIdx].style;\r\n                const color = i%3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight*850/this.state.maxNum}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.enableButtons();\r\n        }, animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n\r\n    insertionSort() {\r\n        this.disableButtons();\r\n\r\n        const animations = algorithms.getInsetionSortAnimations(this.state.array);\r\n        for (let i=0; i<animations.length; i++) {\r\n            const bars = document.getElementsByClassName('bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = bars[barOneIdx].style;\r\n                const barTwoStyle = bars[barTwoIdx].style;\r\n                const color = i%3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight*850/this.state.maxNum}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.enableButtons();\r\n        }, animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n\r\n    countingSort() {\r\n        this.disableButtons();\r\n    \r\n        const animations = algorithms.getCountingSortAnimations(this.state.array, this.state.maxNum);\r\n        for (let i=0; i<animations.length; i++) {\r\n            const bars = document.getElementsByClassName('bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = bars[barOneIdx].style;\r\n                const barTwoStyle = bars[barTwoIdx].style;\r\n                const color = i%3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight*850/this.state.maxNum}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    \r\n        setTimeout(() => {\r\n            this.enableButtons();\r\n        }, animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n\r\n    disableButtons() {\r\n        document.getElementById('slider').disabled = true;\r\n        document.getElementById('randomize-button').disabled = true;\r\n        document.getElementById('mergesort-button').disabled = true;\r\n        document.getElementById('quicksort-button').disabled = true;\r\n        document.getElementById('bubblesort-button').disabled = true;\r\n        document.getElementById('insertionsort-button').disabled = true;\r\n        document.getElementById('countingsort-button').disabled = true;\r\n    }\r\n    \r\n    enableButtons() {\r\n        document.getElementById('slider').disabled = false;\r\n        document.getElementById('randomize-button').disabled = false;\r\n        document.getElementById('mergesort-button').disabled = false;\r\n        document.getElementById('quicksort-button').disabled = false;\r\n        document.getElementById('bubblesort-button').disabled = false;\r\n        document.getElementById('insertionsort-button').disabled = false;\r\n        document.getElementById('countingsort-button').disabled = false;\r\n    }\r\n\r\n    onSliderChange = (event) => {\r\n        this.setState({numBars: event.target.value});\r\n        this.resetArray();\r\n    }\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='toolbar'>\r\n                    <div classNamee='button-container'>\r\n                        <button id='randomize-button' onClick={() => this.resetArray()}>Randomize</button>\r\n                        <button id='mergesort-button' onClick={() => this.mergesort()}>Merge Sort</button>\r\n                        <button id='quicksort-button' onClick={() => this.quicksort()}>Quick Sort</button>\r\n                        <button id='bubblesort-button' onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n                        <button id='insertionsort-button' onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n                        <button id='countingsort-button' onClick={() => this.countingSort()}>Counting Sort</button>\r\n                    </div>\r\n                    <div className='slider-container'>\r\n                        <input type='range' min='10' max='100' value={this.state.numBars} id='slider' className='slider' onChange={this.onSliderChange}></input>\r\n                        <div className='value'>{this.state.numBars}</div>\r\n                    </div>\r\n                </div>\r\n                <div className='bar-container'>\r\n                    {array.map((value, idx) => (\r\n                        <div className='bar' key={idx} style={{backgroundColor: PRIMARY_COLOR, height: `${value/this.state.maxNum*90}vh`, width: `${this.state.numBars/250*100}vw`}}></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default SortingVisualiser;","import React from 'react';\r\nimport './App.css';\r\nimport SortingVisualiser from './SortingVisualiser/SortingVisualiser';\r\nimport './SortingVisualiser/SortingVisualiser.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualiser></SortingVisualiser>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}